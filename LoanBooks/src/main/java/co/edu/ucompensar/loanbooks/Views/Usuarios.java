package co.edu.ucompensar.loanbooks.Views;

import co.edu.ucompensar.loanbooks.Controller.PostLoansBDBooks;
import co.edu.ucompensar.loanbooks.Models.Client;
import co.edu.ucompensar.loanbooks.Models.User;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Angie Melo
 */
public class Usuarios extends javax.swing.JFrame {

    PostLoansBDBooks usersCrud = new PostLoansBDBooks();
    int selectRow = -1;
    
    /**
     * Creates new form Libros
     */
    public Usuarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        escritorio = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUserList = new javax.swing.JTable();
        jButtonSearch = new javax.swing.JButton();
        jTextUserSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jComboBoxClientStatus = new javax.swing.JComboBox<>();
        loadData = new javax.swing.JButton();
        listDocuments = new javax.swing.JComboBox<>();
        jPassword = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jConfirmPassword = new javax.swing.JPasswordField();
        jComboBoxRoll = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        jLabel5.setText("Categoria");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        escritorio.setBackground(new java.awt.Color(255, 255, 255));

        jTableUserList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idUsuario", "Usuario", "Rol", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUserList);

        jButtonSearch.setText("Consultar");
        jButtonSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jTextUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextUserSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("Cliente que desea consultar");

        jLabel6.setText("Documento:");

        jLabel2.setText("Contraseña");

        jLabel3.setText("Rol");

        jLabel7.setText("Estado");

        jButtonSave.setText("Insertar");
        jButtonSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Editar");
        jButtonEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Eliminar");
        jButtonDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jComboBoxClientStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Activo", "Inactivo", "Suspendido" }));

        loadData.setText("Cargar Datos");
        loadData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDataActionPerformed(evt);
            }
        });

        listDocuments.setModel(new DefaultComboBoxModel(documents()));
        listDocuments.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listDocumentsItemStateChanged(evt);
            }
        });

        jLabel8.setText("Confirmar Contraseña");

        jComboBoxRoll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Administrador", "Controlador", "Cliente" }));

        escritorio.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jButtonSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jTextUserSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jButtonSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jButtonEdit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jButtonDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jComboBoxClientStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(loadData, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(listDocuments, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jPassword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jConfirmPassword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorio.setLayer(jComboBoxRoll, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioLayout.createSequentialGroup()
                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(escritorioLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(escritorioLayout.createSequentialGroup()
                                .addComponent(jTextUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(escritorioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(escritorioLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(escritorioLayout.createSequentialGroup()
                                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(escritorioLayout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addComponent(jPassword))
                                    .addGroup(escritorioLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6))
                                        .addGap(27, 27, 27)
                                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxClientStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(escritorioLayout.createSequentialGroup()
                                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(escritorioLayout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(jLabel3))
                                    .addGroup(escritorioLayout.createSequentialGroup()
                                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(loadData, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(60, 67, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(listDocuments, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(escritorioLayout.createSequentialGroup()
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(listDocuments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxClientStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addGroup(escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadData, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        jPanel1.setBackground(new java.awt.Color(2, 64, 89));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Usuarios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(escritorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(escritorio)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextUserSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextUserSearchActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String search = jTextUserSearch.getText();
        ArrayList<User> userList = new ArrayList<>(); 
        
        if(search.isEmpty()){
            userList = usersCrud.getUsers();
        }else{
            userList = usersCrud.getUser(Long.parseLong(search));
        }       
        
        
        String[][] dataTable = new String[userList.size()][5];
        
        for (int i = 0; i < userList.size(); i++) {
            dataTable[i][0] = String.valueOf(userList.get(i).getIdUser());
            dataTable[i][1] = String.valueOf(userList.get(i).getIdClient());
            dataTable[i][2] = userList.get(i).getRol();            
            dataTable[i][3] = userList.get(i).getStatus();
        }
        
        jTableUserList.setModel(new javax.swing.table.DefaultTableModel(
            dataTable,new String [] {
                "Id Usuario", "Usuario", "Rol", "Estado"
            }
        ));       
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        long clientDocument = Long.parseLong(this.listDocuments.getSelectedItem().toString());
        String pass  = String.valueOf(this.jPassword.getPassword());
        String confirmPass  = String.valueOf(this.jConfirmPassword.getPassword());
        String userRoll = this.jComboBoxRoll.getSelectedItem().toString();
        String userStatus = this.jComboBoxClientStatus.getSelectedItem().toString();
                                      
        if(pass.equals(confirmPass)){
            if(pass.length() >=8){
                if(userRoll != "Seleccione"){
                    if(userStatus != "Seleccione"){
                        User user = new User(clientDocument,pass,userRoll,userStatus);                
                        usersCrud.insertUsers(user);                                        
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "El valor de campo Estado es invalido","Error",0);
                    }
                }else{
                    JOptionPane.showMessageDialog(rootPane, "El valor de campo Rol es invalido","Error",0);
                }
            }else{
                JOptionPane.showMessageDialog(null, "La contraseña debe ser mayor a 8 caracteres");
            }               
        }else{
            JOptionPane.showMessageDialog(null, "Las contraseñas No coinciden");
            this.jConfirmPassword.setText("");
        }
            
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        selectRow = this.jTableUserList.getSelectedRow();
        int clientDocument,id;
        String pass,confirmPass,userStatus,userRoll,idUser;
                
        if(this.jTableUserList.getSelectedRow() != -1){
            clientDocument = Integer.parseInt(this.listDocuments.getSelectedItem().toString());
            pass  = String.valueOf(this.jPassword.getPassword());
            confirmPass  = String.valueOf(this.jConfirmPassword.getPassword());            
            userRoll = this.jComboBoxRoll.getSelectedItem().toString();
            userStatus = this.jComboBoxClientStatus.getSelectedItem().toString();
            idUser = (String) jTableUserList.getValueAt(selectRow, 0);
            id = Integer.parseInt(idUser);
            if(pass.equals(confirmPass)){
                if(pass.length() >=8){
                    if(userRoll != "Seleccione"){
                        if(userStatus != "Seleccione"){
                            User user = new User(id,clientDocument,pass,userRoll,userStatus);                
                            usersCrud.updateUsers(user); 
                            this.clean();
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "El valor de campo Estado es invalido","Error",0);
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "El valor de campo Rol es invalido","Error",0);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "La contraseña debe ser mayor a 8 caracteres");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Las contraseñas No coinciden");
                this.jConfirmPassword.setText("");
            }                
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un elemento de la tabla");
        }
        
        
        
    }//GEN-LAST:event_jButtonEditActionPerformed

    
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        selectRow = this.jTableUserList.getSelectedRow();
        int id;
        String idUser;
        if(this.jTableUserList.getSelectedRow() != -1){            
            idUser = (String) jTableUserList.getValueAt(selectRow, 0);
            id = Integer.parseInt(idUser);                        
            usersCrud.deleteUsers(id);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un elemento de la tabla");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void loadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDataActionPerformed
       selectRow = this.jTableUserList.getSelectedRow();
        if(selectRow != -1){
            this.listDocuments.getModel().setSelectedItem(jTableUserList.getValueAt(selectRow, 1));
            this.jComboBoxRoll.getModel().setSelectedItem(jTableUserList.getValueAt(selectRow, 2));
            this.jComboBoxClientStatus.getModel().setSelectedItem(jTableUserList.getValueAt(selectRow, 3));
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un elemento de la tabla");
        }
    }//GEN-LAST:event_loadDataActionPerformed

    private void listDocumentsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listDocumentsItemStateChanged
       /* if(evt.getStateChange() == ItemEvent.SELECTED){
            this.listDocuments.setModel(new DefaultComboBoxModel(documents()));
        }*/
    }//GEN-LAST:event_listDocumentsItemStateChanged
    
    public String[] documents(){
        ArrayList<Long> documentsList = usersCrud.getDocuments(); 
        String[] documents = new String[documentsList.size()];
        for (int i = 0; i < documentsList.size(); i++) {
            documents[i] = String.valueOf(documentsList.get(i));
        }
        return documents;
    }
    
    public void clean(){
        this.jComboBoxRoll.setSelectedIndex(0);
        this.listDocuments.setSelectedIndex(0);
        this.jPassword.setText("");
        this.jConfirmPassword.setText("");
        this.jComboBoxClientStatus.setSelectedIndex(0);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox<String> jComboBoxClientStatus;
    private javax.swing.JComboBox<String> jComboBoxRoll;
    private javax.swing.JPasswordField jConfirmPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUserList;
    private javax.swing.JTextField jTextUserSearch;
    private javax.swing.JComboBox<String> listDocuments;
    private javax.swing.JButton loadData;
    // End of variables declaration//GEN-END:variables
}
